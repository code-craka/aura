name: "AI Code Review with Gemini"

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]
  issue_comment:
    types: [created]

jobs:
  ai-code-review:
    if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      repository-projects: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-generativeai requests

    - name: Make script executable
      run: chmod +x .github/scripts/gemini-code-review.py

    - name: Run AI Code Review
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        REPO_NAME: ${{ github.repository }}
        GITHUB_EVENT_NAME: ${{ github.event_name }}
      run: |
        if [ -z "$GEMINI_API_KEY" ]; then
          echo "GEMINI_API_KEY secret is not set. Please add it to repository secrets."
          echo "Get your API key from: https://makersuite.google.com/app/apikey"
          exit 1
        fi

        python .github/scripts/gemini-code-review.py

    - name: Comment on PR with AI Review
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');

          // Read the AI review results
          const reviewFile = path.join(process.env.GITHUB_WORKSPACE, '.github', 'scripts', 'ai-review-results.md');

          if (fs.existsSync(reviewFile)) {
            const reviewContent = fs.readFileSync(reviewFile, 'utf8');

            // Post comment on PR
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: \`## ðŸ¤– AI Code Review Results

          \${reviewContent}

          ---
          *This review was generated by Google Gemini AI. Please review the suggestions carefully before implementing.*\`
            });
          } else {
            console.log('No AI review results found');
          }

  ai-pr-summary:
    if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate PR Summary
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');

          // Get PR details
          const pr = context.payload.pull_request;
          const changedFiles = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.number
          });

          // Analyze changed files
          const fileTypes = {};
          let totalAdditions = 0;
          let totalDeletions = 0;

          changedFiles.data.forEach(file => {
            const ext = file.filename.split('.').pop() || 'unknown';
            fileTypes[ext] = (fileTypes[ext] || 0) + 1;
            totalAdditions += file.additions;
            totalDeletions += file.deletions;
          });

          // Generate summary
          const summary = [
            '## ðŸ“Š Pull Request Summary',
            '',
            '### Changes Overview',
            \`- **Files Changed**: \${changedFiles.data.length}\`,
            \`- **Additions**: +\${totalAdditions}\`,
            \`- **Deletions**: -\${totalDeletions}\`,
            \`- **Net Change**: \${totalAdditions - totalDeletions > 0 ? '+' : ''}\${totalAdditions - totalDeletions}\`,
            '',
            '### File Types Modified',
            ...Object.entries(fileTypes).map(([ext, count]) => \`- **.\${ext}**: \${count} files\`),
            '',
            '### Key Changes',
            ...changedFiles.data.slice(0, 10).map(file => \`- \\\`\${file.filename}\\\` (\${file.status})\`),
            '',
            '---',
            '*Generated automatically by AI Code Review workflow*'
          ].join('\\n');

          // Update PR description if it's empty or add as comment
          const currentBody = pr.body || '';
          if (!currentBody.includes('## ðŸ“Š Pull Request Summary')) {
            await github.rest.issues.createComment({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
          }
